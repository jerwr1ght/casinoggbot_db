# -*- coding: utf8 -*-
import telebot
import random
from telebot import types
import config
import threading
import psycopg2
import os
import time
#DATABASE_URL = os.environ['DATABASE_URL']
global db
global sql
db = psycopg2.connect(database='d6ipfqeahpii9', user='tualpgdacfdowa', port="5432", password='415217eb3e4acb039e30c4ff760b49c478935253484832ffe9e16467eb9007f3', host='ec2-52-23-45-36.compute-1.amazonaws.com', sslmode='require')
sql=db.cursor()
sql.execute("""CREATE TABLE IF NOT EXISTS players (chatid TEXT, username TEXT, cash INT, inbank INT, total INT, job_blocked TEXT)""")
db.commit()
sql.execute("""CREATE TABLE IF NOT EXISTS developers (chatid TEXT)""")
db.commit()
sql.execute("""CREATE TABLE IF NOT EXISTS referals (refchatid TEXT, refusername TEXT, tochatid TEXT, tousername TEXT, reftotal INT)""")
db.commit()
sql.execute("DROP TABLE IF EXISTS rollcoop")
db.commit()
sql.execute("""CREATE TABLE IF NOT EXISTS rollcoop (fchatid TEXT, schatid TEXT, fscore INT, sscore INT, wincash INT)""")
db.commit()



global coop_roll_bet
coop_roll_bet=random.choice([500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000])

bot=telebot.TeleBot(config.TOKEN)


def starting_unblocking():
    sql.execute(f"SELECT chatid FROM players WHERE job_blocked = 'blocked'")
    rows=sql.fetchall()
    for row in rows:
        sql.execute(f"UPDATE players SET job_blocked = 'unblocked' WHERE chatid = '{row[0]}'")
        db.commit()

starting_unblocking()

@bot.message_handler(commands=['start'])
def welcome(message):
    sql.execute(f"SELECT cash FROM players WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    if res is None:
        choose_nickname=bot.send_message(message.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–∏–∫–Ω–µ–π–º –¥–ª—è –∏–≥—Ä—ã (–≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –µ–≥–æ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å)")
        bot.register_next_step_handler(choose_nickname, creating_account)

@bot.message_handler(commands=['delacc'])
def choosing_deleting_acc(message):
    adding_keyboard()
    sql.execute(f"SELECT * FROM developers WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    if res!=None:
        delete_acc=bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞–∫–∫–∞—É–Ω—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å', reply_markup=markup_reply)
        bot.register_next_step_handler(delete_acc, deleting_acc)
    else:
        return time.sleep(0.5) 

def deleting_acc(message):
    adding_keyboard()
    sql.execute(f"SELECT * FROM players WHERE username = '{message.text}'")
    if sql.fetchone()!=None:
        del_answer_reply = types.InlineKeyboardMarkup()
        del_answer_reply.add(types.InlineKeyboardButton('‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç–µ —ç—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç', callback_data=f'delete_acc{message.text}'))
        del_answer_reply.add(types.InlineKeyboardButton('‚ùå –ù–µ—Ç, –ø–æ–∫–∞ –Ω–µ –Ω–∞–¥–æ', callback_data='no_del_acc'))
        bot.send_message(message.from_user.id, f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç <b>{message.text}</b> —Å–æ –≤—Å–µ–º–∏ –µ–≥–æ –¥–∞–Ω–Ω—ã–º–∏?", parse_mode='html', reply_markup=del_answer_reply)
    else:
        return bot.reply_to(message, f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", reply_markup=markup_reply)


@bot.message_handler(commands=['send'])
def login(message):
    sql.execute(f"SELECT * FROM developers WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    if res!=None:
        cancel_reply=types.ReplyKeyboardMarkup(resize_keyboard=True)
        cancel_reply.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ'))
        do_send=bot.send_message(message.from_user.id, "–ß—Ç–æ –±—É–¥–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º?", reply_markup=cancel_reply)
        bot.register_next_step_handler(do_send, sending)
    else:
        return time.sleep(0.5)

def sending(message):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    mes=message.text
    sql.execute("SELECT chatid FROM players")
    rows = sql.fetchall()
    for row in rows:
        try:
            #bot.unpin_chat_message(row[0])
            bot.send_message(row[0], mes, parse_mode='html', reply_markup=markup_reply)
            #bot.pin_chat_message(row[0], for_pin.message_id, disable_notification=True)
        except:
            pass
    time.sleep(0.5)

@bot.message_handler(commands=['clear'])
def welcome(message):
    sql.execute(f"SELECT * FROM developers WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    if res!=None:
        do_clear=bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∞–∫–∫–∞—É–Ω—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å', reply_markup=markup_reply)
        bot.register_next_step_handler(do_clear, clearing)
    else:
        return time.sleep(0.5)

def clearing(message):
    adding_keyboard()
    sql.execute(f"SELECT * FROM players WHERE username = '{message.text}'")
    if sql.fetchone()!=None:
        del_answer_reply = types.InlineKeyboardMarkup()
        del_answer_reply.add(types.InlineKeyboardButton('‚úÖ –î–∞, –æ—á–∏—Å—Ç–∏—Ç–µ –±–∞–ª–∞–Ω—Å —ç—Ç–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞', callback_data=f'clear_acc{message.text}'))
        del_answer_reply.add(types.InlineKeyboardButton('‚ùå –ù–µ—Ç, –ø–æ–∫–∞ –Ω–µ –Ω–∞–¥–æ', callback_data='no_del_acc'))
        bot.send_message(message.from_user.id, f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –±–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞ <b>{message.text}</b>?", parse_mode='html', reply_markup=del_answer_reply)
    else:
        return bot.reply_to(message, f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É", reply_markup=markup_reply)

@bot.message_handler(commands=['setbank'])
def set_bank(message):
    adding_all()
    sql.execute(f"SELECT * FROM developers WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    if res!=None:
        choose_user=bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–ª–∏ –∂–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É), –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å –¥–µ–Ω—å–≥–∏', reply_markup=all_reply)
        bot.register_next_step_handler(choose_user, choosing_user)
    else:
        return time.sleep(0.5)    
def choosing_user(message):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_all()
    touser=message.text
    sql.execute(f"SELECT username FROM players WHERE username = '{touser}'")
    if sql.fetchone() is None and touser.lower()!='–≤—Å–µ' and touser.lower()!='–≤—Å–µ–º': 
        return
    send_money=bot.send_message(message.from_user.id, '–ö–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏?')
    bot.register_next_step_handler(send_money, sending_money, touser)

def sending_money(message, touser):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    try:
        sending_amount=int(message.text)
        if sending_amount<1:
            return bot.reply_to(message, f'‚ö†Ô∏è –ù–µ–ª—å–∑—è —Å–æ–≤–µ—Ä—à–∏—Ç—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é —Å {amount} üí∏', reply_markup=markup_reply)
    except:
        return
    if touser.lower()=='–≤—Å–µ' or touser.lower()=='–≤—Å–µ–º' or touser=='–í—Å–µ üí∏':
        sql.execute(f"SELECT chatid, username FROM players")
        rows=sql.fetchall()
        for row in rows:
            sql.execute(f"UPDATE players SET inbank = inbank + {sending_amount}, total = total + {sending_amount} WHERE chatid = '{row[0]}'")
            db.commit()
            try:
                bot.send_message(int(row[0]), f"<b>–£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {row[1]}</b>! –ü–æ —Ä–µ—à–µ–Ω–∏—é —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç –±—ã–ª–æ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–æ <b>{true_numbers(sending_amount)}</b> üí∏", parse_mode='html', reply_markup=markup_reply)
            except:
                pass
    else:
        sql.execute(f"UPDATE players SET inbank = inbank + {sending_amount}, total = total + {sending_amount} WHERE username = '{touser}'")
        db.commit()
        sql.execute(f"SELECT chatid FROM players WHERE username='{touser}'")
        row = int(sql.fetchone()[0])
        try:
            bot.send_message(row, f"<b>–£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {touser}</b>! –ü–æ —Ä–µ—à–µ–Ω–∏—é —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç –±—ã–ª–æ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–æ <b>{true_numbers(sending_amount)}</b> üí∏", parse_mode='html', reply_markup=markup_reply)
        except:
            pass

@bot.message_handler(content_types=['text'])
def chatting(message):
    global coop_roll_bet
    sql.execute(f"SELECT cash FROM players WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    if res is None:
        return bot.reply_to(message, "‚ö†Ô∏è –í–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∞–∫–∞–¥–µ–º–∏–∏ –•—è–∫–∫–∞–æ. –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /start", reply_markup=None)
    global choosing_cash
    adding_keyboard()
    adding_all()
    if message.text=='üé≤ –ò–≥—Ä–∞—Ç—å –≤ –∫–æ—Å—Ç–∏':
        choosing_cash=bot.send_message(message.from_user.id, "–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å? –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –Ω–∞–ª–∏—á–Ω—ã–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=all_reply)
        bot.register_next_step_handler(choosing_cash, roll_win)
    elif f'üé≤ –ö–æ—Å—Ç–∏ 1 –Ω–∞ 1 (–°—Ç–∞–≤–∫–∞:' in message.text:
        sql.execute(f"SELECT * FROM rollcoop")
        res=sql.fetchone()
        dice_reply=types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
        dice_reply.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ'))
        if res==None:
            bot.send_dice(message.from_user.id, emoji='üé≤')
            send_dice=bot.send_message(message.from_user.id, f'–í–∞—à–∞ –æ—á–µ—Ä–µ–¥—å –±—Ä–æ—Å–∞—Ç—å –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å! (–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —ç–º–æ–¥–∑–∏ - üé≤, –ª–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å –≤—ã—à–µ)\n<b>–î–µ–π—Å—Ç–≤—É—é—â–∞—è —Å—Ç–∞–≤–∫–∞:</b> {true_numbers(coop_roll_bet)} üí∏', parse_mode='html', reply_markup=dice_reply)
            bot.register_next_step_handler(send_dice, sending_dice_new)
        else:
            sql.execute(f"SELECT * FROM rollcoop WHERE fchatid = '{message.from_user.id}'")
            res=sql.fetchone()
            if res!=None:
                del_dice_reply = types.InlineKeyboardMarkup()
                del_dice_reply.add(types.InlineKeyboardButton('‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Å—Ç–∞–≤–∫–∏', callback_data=f'del_dice{str(message.from_user.id)}'))
                bot.send_message(message.chat.id, "‚ö†Ô∏è –í—ã —É–∂–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ —É—á–∞—Å—Ç–∏–µ –≤ –æ–¥–Ω–æ–π –∏–∑ –∏–≥—Ä, –Ω–æ –ø–æ–∫–∞ —á—Ç–æ –º—ã –Ω–µ –Ω–∞—à–ª–∏ –≤–∞–º –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Å—Ç–∞–≤–∫–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=del_dice_reply)
                return
            bot.send_dice(message.from_user.id, emoji='üé≤')
            send_dice=bot.send_message(message.from_user.id, f'–í–∞—à–∞ –æ—á–µ—Ä–µ–¥—å –±—Ä–æ—Å–∞—Ç—å –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å! (–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —ç–º–æ–¥–∑–∏ - üé≤, –ª–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å –Ω–∏–∂–µ)\n<b>–î–µ–π—Å—Ç–≤—É—é—â–∞—è —Å—Ç–∞–≤–∫–∞:</b> {true_numbers(coop_roll_bet)} üí∏', parse_mode='html', reply_markup=dice_reply)
            bot.register_next_step_handler(send_dice, sending_dice_existed)
    elif message.text=='üé∞ –ò–≥—Ä–∞—Ç—å –≤ —Ä—É–ª–µ—Ç–∫—É':
        adding_all()
        set_cash=bot.send_message(message.from_user.id, "–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å? –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –Ω–∞–ª–∏—á–Ω—ã–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=all_reply)
        bot.register_next_step_handler(set_cash, choosing_roll)
    elif message.text == 'üó° –ñ–∏–∑–Ω—å –∏–ª–∏ —Å–º–µ—Ä—Ç—å':
        choosing_cash=bot.send_message(message.from_user.id, "–ù–∞ –∫–∞–∫—É—é —Å—É–º–º—É —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å? –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –Ω–∞ –≤—Å–µ –≤–∞—à–∏ –Ω–∞–ª–∏—á–Ω—ã–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=all_reply)
        bot.register_next_step_handler(choosing_cash, lord_amount)
    elif message.text=='üè¶ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏–≥—Ä–æ–∫—É':
        transfer_choose_name=bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ –Ω–∏–∫–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ —Å –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞?", reply_markup=markup_reply)
        bot.register_next_step_handler(transfer_choose_name, transfer_choosing_name)
    elif message.text=='üí∞ –ë–∞–ª–∞–Ω—Å':
        sql.execute(f"SELECT * FROM players WHERE chatid = '{message.from_user.id}'")
        res=sql.fetchone()
        msg= f"üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å ({res[1]})</b> üí∞\n\nüëã –ù–∞–ª–∏—á–Ω—ã–µ: {true_numbers(res[2])} üí∏\nüè¶ –í –±–∞–Ω–∫–µ: {true_numbers(res[3])} üí∏\n‚öñÔ∏è –í—Å–µ–≥–æ: {true_numbers(res[4])} üí∏"
        bot.send_message(message.from_user.id, msg, parse_mode='html', reply_markup=markup_reply)
    elif message.text=='üíº –†–∞–±–æ—Ç–∞—Ç—å':
        sql.execute(f"SELECT job_blocked FROM players WHERE chatid = '{message.from_user.id}'")
        res=sql.fetchone()
        if res[0]!='blocked':
            fee = random.randint(100,500)
            sql.execute(f"UPDATE players SET inbank = inbank + {fee}, total = total + {fee} WHERE chatid = '{message.from_user.id}'")
            db.commit()
            sql.execute(f"UPDATE players SET job_blocked = 'blocked' WHERE chatid = '{message.from_user.id}'")
            db.commit()
            bot.send_message(message.from_user.id, f'–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –∑–∞–º–µ–Ω–∏–ª–∏ –Ω–∞—à–µ–≥–æ –¥–∏–ª–µ—Ä–∞ –≤ —ç—Ç–æ—Ç —Ä–∞–∑. <b>{fee}</b> üí∏ –±—ã–ª–∏ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç! –î–∞–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –≤–∞–º –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ 5 –º–∏–Ω—É—Ç.', parse_mode='html', reply_markup=markup_reply)
            print(f"{message.from_user.username} –∑–∞—Ä–∞–±–æ—Ç–∞–ª {fee}")
            import check_work_db
            user_id=str(message.from_user.id)
            check_work_db.t = threading.Timer(300.0, check_work_db.block_work, args=(user_id,))
            check_work_db.t.start()
        else:
            bot.send_message(message.from_user.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –µ—â—ë –¥–ª–∏—Ç—Å—è –ø–µ—Ä–µ—Ä—ã–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!', reply_markup=markup_reply)
    elif message.text=='üíµ –ü–æ–ª–æ–∂–∏—Ç—å –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç':
        user_cash=bot.send_message(message.from_user.id, "–ö–∞–∫—É—é —Å—É–º–º—É —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç? –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≤—Å–µ –Ω–∞–ª–∏—á–Ω—ã–µ, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=all_reply)
        bot.register_next_step_handler(user_cash, to_bank)
    elif message.text=='üè¶ –°–Ω—è—Ç—å —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞':
        user_inbank=bot.send_message(message.from_user.id, "–ö–∞–∫—É—é —Å—É–º–º—É —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å? –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –≤—Å–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", reply_markup=all_reply)
        bot.register_next_step_handler(user_inbank, from_bank)
    elif message.text=='üèÜ –°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤':
        counter = 0
        sql.execute(f"SELECT username FROM players")
        rows = sql.fetchall()
        msg = f'üèÜ <b>–°–ø–∏—Å–æ–∫ —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –∏–≥—Ä–æ–∫–æ–≤</b> üèÜ\n(–í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: <b>{len(rows)}</b>)\n\n'
        no_repeat=False
        sql.execute("SELECT username, total, chatid FROM players ORDER BY total DESC LIMIT 10")
        rows = sql.fetchall()
        for row in rows:
            if row[2]==str(message.from_user.id):
                no_repeat=True
                counter += 1
                msg = f"{msg}<b><u>#{counter}</u> | {row[0]} (–í—ã)</b> - {true_numbers(row[1])} üí∏\n"
            else:
                counter += 1
                msg = f"{msg}<b><u>#{counter}</u> | {row[0]}</b> - {true_numbers(row[1])} üí∏\n"
        if no_repeat!=True:
            counter = 0
            sql.execute(f"SELECT username, total, chatid FROM players ORDER BY total")
            rows = sql.fetchall()
            for row in rows:
                counter += 1
                if row[2]==str(message.from_user.id):
                    continue
            msg=f"{msg}\n–í—ã –∑–∞–Ω–∏–º–∞–µ—Ç–µ <b>{counter}-–æ–µ</b> –º–µ—Å—Ç–æ, –Ω–æ –≤–∞—à–µ –º–µ—Å—Ç–æ –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤ –Ω–µ –∑–∞ –≥–æ—Ä–∞–º–∏!"
        bot.send_message(message.from_user.id, msg, parse_mode='html', reply_markup=markup_reply)
    elif message.text=='üì© –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞':
        sql.execute(f"SELECT * FROM referals WHERE tochatid = '{message.from_user.id}' ORDER BY reftotal")
        rows=sql.fetchall()
        if rows==[]:
            return bot.reply_to(message, f'‚ö†Ô∏è –í—ã –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–ª–∏ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ. –î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É–∫–∞–∑–∞–ª –≤–∞—à –Ω–∏–∫–Ω–µ–π–º –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', reply_markup=markup_reply)
        msg = f'üì© <b>–í–∞—à –∑–∞—Ä–∞–±–æ—Ç–æ–∫</b> üì©\n\n'
        counter = 0
        reftotal=0
        for row in rows:
            counter += 1
            reftotal=reftotal+row[4]
            msg = f"{msg}<b><u>#{counter}</u> | {row[1]}</b> - {true_numbers(row[4])} üí∏\n"        
        msg=f"{msg}\n<b>–í—Å–µ–≥–æ:</b> {true_numbers(reftotal)} üí∏"
        bot.send_message(message.from_user.id, msg, parse_mode='html', reply_markup=markup_reply)
    elif message.text==f'üë§ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º (–¶–µ–Ω–∞: {str(change_username_price)} üí∏)':
        sql.execute(f"SELECT username FROM players WHERE chatid = '{message.from_user.id}'")
        res=sql.fetchone()
        if res!=None:
            cancel_change_reply=types.ReplyKeyboardMarkup(resize_keyboard=True)
            cancel_change_reply.add(types.KeyboardButton('‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞'))
            change_username=bot.send_message(message.from_user.id, f'–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º –¥–ª—è –∏–≥—Ä—ã. <b>–¶–µ–Ω–∞ —É—Å–ª—É–≥–∏:</b> {change_username_price} üí∏. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ', parse_mode='html', reply_markup=cancel_change_reply)
            bot.register_next_step_handler(change_username, changing_username)
        else:
            return bot.reply_to(message, f'‚ö†Ô∏è –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∏–≥—Ä–æ–∫–æ–º. –î–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start', reply_markup=markup_reply)
    elif message.text=='/rollhelp':
        roll_link='https://telegra.ph/FAQ---Ruletka-04-01'
        roll_link_reply = types.InlineKeyboardMarkup()
        roll_link_reply.add(types.InlineKeyboardButton('üåê FAQ - –†—É–ª–µ—Ç–∫–∞', url=roll_link))
        bot.send_message(message.from_user.id, text='–ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–≥—Ä–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Ä–∞–¥–∏ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è, –Ω–æ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≤—ã–∏–≥—Ä—ã–≤–∞—Ç—å –≤ —Ä—É–ª–µ—Ç–∫—É, –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –æ —Ç–∏–ø–∞—Ö —Å—Ç–∞–≤–æ–∫ –∏ –≤—ã–ø–ª–∞—Ç–∞—Ö –≤ —ç—Ç–æ–π –∏–≥—Ä–µ. –ü–æ–º–Ω–∏—Ç–µ, —á–µ–º —Ç–æ—á–Ω–µ–µ –±—É–¥–µ—Ç –í–∞—à –≤—ã–±–æ—Ä, —Ç–µ–º –±–æ–ª—å—à–µ–π –æ–∫–∞–∂–µ—Ç—Å—è –í–∞—à–∞ –≤—ã–ø–ª–∞—Ç–∞ –≤ —Å–ª—É—á–∞–µ –≤—ã–∏–≥—Ä—ã—à–∞', reply_markup=roll_link_reply)
    elif message.text=='/lordhelp':
        life_or_death_link='https://telegra.ph/FAQ---ZHizn-ili-smert-04-04'
        life_or_death_link_reply = types.InlineKeyboardMarkup()
        life_or_death_link_reply.add(types.InlineKeyboardButton('üåê FAQ - –ñ–∏–∑–Ω—å –∏–ª–∏ —Å–º–µ—Ä—Ç—å', url=life_or_death_link))
        bot.send_message(message.from_user.id, text='"–ñ–∏–∑–Ω—å –∏–ª–∏ —Å–º–µ—Ä—Ç—å" - –æ–¥–Ω–∞ –∏–∑ –æ–ø–∞—Å–Ω–µ–π—à–∏—Ö –∏–≥—Ä –∞–∫–∞–¥–µ–º–∏–∏ –•—è–∫–∫–∞–æ. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∞–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –≤—Å–µ —Å–≤–æ–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è', reply_markup=life_or_death_link_reply)
    elif message.text=='/reset':
        sql.execute(f"SELECT cash FROM players WHERE chatid = '{message.from_user.id}'")
        res=sql.fetchone()
        if res!=None:
            bot.send_message(message.from_user.id, '‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞', reply_markup=markup_reply)
    time.sleep(0.5)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        if call.data=='no_del_acc':
            bot.delete_message(call.message.chat.id, call.message.message_id)
            bot.send_message(call.message.chat.id, "–•–æ—Ä–æ—à–æ! –û—Å—Ç–∞–≤–∏–º —ç—Ç–æ –Ω–∞ –ø–æ—Ç–æ–º")
            bot.send_sticker(call.message.chat.id, 'CAACAgUAAxkBAAECIwpgZwgM31EvZgFLqJQXHXWW6J8zHQACLwIAAjhkuguZVDReJ8Ig8R4E')
        elif 'del_dice' in call.data:
            user_id=call.data.replace('del_dice', '')
            adding_keyboard()
            sql.execute(f"DELETE FROM rollcoop WHERE fchatid = '{user_id}'")
            db.commit()
            bot.edit_message_text('‚úÖ –ü–æ–∏—Å–∫ –∏–≥—Ä–æ–∫–æ–≤ –æ—Ç–º–µ–Ω—ë–Ω', call.message.chat.id, call.message.message_id, reply_markup=None)
        elif 'delete_acc' in call.data:
            username=call.data.replace('delete_acc', '')
            bot.delete_message(call.message.chat.id, call.message.message_id)
            sql.execute(f"DELETE FROM players WHERE username = '{username}'")
            db.commit()
            sql.execute(f"DELETE FROM referals WHERE refusername = '{username}'")
            db.commit()
            sql.execute(f"DELETE FROM referals WHERE tousername = '{username}'")
            db.commit()
            bot.send_message(call.message.chat.id, "–ê–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω")
            print(f"–ê–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} –±—ã–ª —É–¥–∞–ª—ë–Ω")
        elif 'clear_acc' in call.data:
            username=call.data.replace('clear_acc', '')
            bot.delete_message(call.message.chat.id, call.message.message_id)
            sql.execute(f"UPDATE players SET cash = {0}, inbank = {0}, total = {0} WHERE username = '{username}'")
            db.commit()
            bot.send_message(call.message.chat.id, "–ë–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω—É–ª—ë–Ω")
            print(f"–ë–∞–ª–∞–Ω—Å –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω—É–ª—ë–Ω")
        


def sending_dice_new(message):
    sql.execute(f"SELECT cash FROM players WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    if res[0]>=coop_roll_bet and coop_roll_bet>=1:
        pass
    elif res[0]==0:
        return bot.reply_to(message, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ª–∏—á–Ω—ã—Ö –¥–ª—è –∏–≥—Ä—ã', reply_markup=markup_reply)
    else:
        msg=f'–í–∞—à–∏—Ö –Ω–∞–ª–∏—á–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å—É–º–º—É <b>{true_numbers(coop_roll_bet)}</b> üí∏. –°–Ω–∏–º–∏—Ç–µ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ –µ—â—ë <b>{true_numbers(coop_roll_bet-res[0])}</b> üí∏'
        return bot.reply_to(message, msg, parse_mode='html', reply_markup=markup_reply)
    adding_keyboard()
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    try:
        if message.dice.emoji!='üé≤':
            return bot.reply_to(message, "‚ö†Ô∏è –í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å", reply_markup=markup_reply)
    except:
        return bot.reply_to(message, "‚ö†Ô∏è –í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å", reply_markup=markup_reply)
    sql.execute("INSERT INTO rollcoop VALUES (%s, %s, %s, %s, %s)", (message.from_user.id, 'None', message.dice.value, 0, coop_roll_bet))
    db.commit()
    wincash=coop_roll_bet
    bot.send_message(message.from_user.id, f"–£–≥—É...–Ω–∞ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –∫—É–±–∏–∫–∞ - <b>{message.dice.value}</b>. –î–æ–≤–æ–ª—å–Ω–æ –Ω–µ–ø–ª–æ—Ö–æ! –ö–∞–∫ —Ç–æ–ª—å–∫–æ –¥—Ä—É–≥–æ–π –∏–≥—Ä–æ–∫ –±—Ä–æ—Å–∏—Ç —Å–≤–æ–π –∫—É–±–∏–∫, –≤—ã —É–∑–Ω–∞–µ—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã", parse_mode='html', reply_markup=markup_reply)

def sending_dice_existed(message):
    global coop_roll_bet
    sql.execute(f"SELECT cash FROM players WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    if res[0]>=coop_roll_bet and coop_roll_bet>=1:
        pass
    elif res[0]==0:
        return bot.reply_to(message, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ª–∏—á–Ω—ã—Ö –¥–ª—è –∏–≥—Ä—ã', reply_markup=markup_reply)
    else:
        msg=f'–í–∞—à–∏—Ö –Ω–∞–ª–∏—á–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å—É–º–º—É <b>{true_numbers(coop_roll_bet)}</b> üí∏. –°–Ω–∏–º–∏—Ç–µ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ –µ—â—ë <b>{true_numbers(coop_roll_bet-res[0])}</b> üí∏'
        return bot.reply_to(message, msg, parse_mode='html', reply_markup=markup_reply)
    adding_keyboard()
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    try:
        if message.dice.emoji!='üé≤':
            return bot.reply_to(message, "‚ö†Ô∏è –í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å", reply_markup=markup_reply)
    except:
        return bot.reply_to(message, "‚ö†Ô∏è –í—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å", reply_markup=markup_reply)
    
    sql.execute(f"UPDATE rollcoop SET schatid = {message.from_user.id}, sscore = {message.dice.value} WHERE wincash = {coop_roll_bet}")
    db.commit()
    sql.execute(f"SELECT * FROM rollcoop WHERE schatid = '{message.from_user.id}'")
    res=sql.fetchone()

    sql.execute(f"SELECT username FROM players WHERE chatid = '{res[0]}'")
    fusername=sql.fetchone()
    sql.execute(f"SELECT username FROM players WHERE chatid = '{res[1]}'")
    susername=sql.fetchone()
    wincash=res[4]
    if res[2]>res[3]:
        winner_id=res[0]
        loser_id=res[1]
        winner_score=res[2]
        loser_score=res[3]
        winnner_username=fusername[0]
        loser_username=susername[0]

        winner_msg=f'–ò–≥—Ä–æ–∫ <b>{loser_username}</b> –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≤–∞—à–µ–π –∏–≥—Ä–æ–≤–æ–π –∫–æ–º–Ω–∞—Ç–µ\n'
        loser_msg=f'–í—ã –≤–æ—à–ª–∏ –≤ –∏–≥—Ä–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É, —Å–æ–∑–¥–∞–Ω–Ω—É—é –∏–≥—Ä–æ–∫–æ–º <b>{winnner_username}</b>\n'
    elif res[2]==res[3]:
        msg = f'–ò–≥—Ä–æ–∫ <b>{susername[0]}</b> –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≤–∞—à–µ–π –∏–≥—Ä–æ–≤–æ–π –∫–æ–º–Ω–∞—Ç–µ. –ù–∞ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –µ–≥–æ –∫—É–±–∏–∫–∞ –≤—ã–ø–∞–ª–æ —Ç–∞–∫–æ–µ –∂–µ —á–∏—Å–ª–æ, –∫–∞–∫ –∏ —É –≤–∞—Å. –û–±—ä—è–≤–ª—è–µ—Ç—Å—è –Ω–∏—á—å—è, –∞ –≤–∞—à–∏ <b>{true_numbers(wincash)}</b> üí∏ –≤–µ—Ä–Ω—É—Ç—Å—è –∫ –≤–∞–º –Ω–∞ —Å—á—ë—Ç'
        bot.send_message(res[0], msg, parse_mode='html', reply_markup=markup_reply)
        
        msg=f'–í—ã –≤–æ—à–ª–∏ –≤ –∏–≥—Ä–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É, —Å–æ–∑–¥–∞–Ω–Ω—É—é –∏–≥—Ä–æ–∫–æ–º <b>{fusername[0]}</b>. –ù–∞ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –µ–≥–æ –∫—É–±–∏–∫–∞ –≤—ã–ø–∞–ª–æ —Ç–∞–∫–æ–µ –∂–µ —á–∏—Å–ª–æ, –∫–∞–∫ –∏ —É –≤–∞—Å. –û–±—ä—è–≤–ª—è–µ—Ç—Å—è –Ω–∏—á—å—è, –∞ –≤–∞—à–∏ <b>{true_numbers(wincash)}</b> üí∏ –≤–µ—Ä–Ω—É—Ç—Å—è –∫ –≤–∞–º –Ω–∞ —Å—á—ë—Ç'
        bot.send_message(res[1], msg, parse_mode='html', reply_markup=markup_reply)
        
        sql.execute(f"DELETE FROM rollcoop WHERE schatid = '{message.from_user.id}'")
        db.commit()
        return
    else:
        winner_id=res[1]
        loser_id=res[0]
        winner_score=res[3]
        loser_score=res[2]
        loser_username=fusername[0]
        winnner_username=susername[0]

        loser_msg=f'–ò–≥—Ä–æ–∫ <b>{winnner_username}</b> –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –≤–∞—à–µ–π –∏–≥—Ä–æ–≤–æ–π –∫–æ–º–Ω–∞—Ç–µ\n'
        winner_msg=f'–í—ã –≤–æ—à–ª–∏ –≤ –∏–≥—Ä–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É, —Å–æ–∑–¥–∞–Ω–Ω—É—é –∏–≥—Ä–æ–∫–æ–º <b>{loser_username}</b>\n'
    
    difference=res[2]-res[3]
    if difference<0:
        difference=-difference
    sql.execute(f"UPDATE players SET cash = cash + {wincash}, total = total + {wincash} WHERE chatid = '{winner_id}'")
    db.commit()
    sql.execute(f"UPDATE players SET cash = cash - {wincash}, total = total - {wincash} WHERE chatid = '{loser_id}'")
    db.commit()
    ref_profit(message, wincash, loser_id)

    coop_roll_bet=random.choice([500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000])
    adding_keyboard()

    winner_msg = f'{winner_msg}\n<b>–û—á–∫–æ–≤ –Ω–∞ –≤–∞—à–µ–º –∫—É–±–∏–∫–µ:</b> {winner_score}\n<b>–û—á–∫–æ–≤ –Ω–∞ –∫—É–±–∏–∫–µ {loser_username}:</b> {loser_score}\n<b>–†–∞–∑–Ω–∏—Ü–∞:</b> {difference}\n\n–ü–æ–±–µ–¥–∞ –∑–∞ –≤–∞–º–∏!\n<b>–°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞:</b> {true_numbers(wincash)} üí∏'
    bot.send_message(winner_id, winner_msg, parse_mode='html', reply_markup=markup_reply)
    loser_msg= f'{loser_msg}\n<b>–û—á–∫–æ–≤ –Ω–∞ –≤–∞—à–µ–º –∫—É–±–∏–∫–µ:</b> {loser_score}\n<b>–û—á–∫–æ–≤ –Ω–∞ –∫—É–±–∏–∫–µ {winnner_username}:</b> {winner_score}\n<b>–†–∞–∑–Ω–∏—Ü–∞:</b> {difference}\n\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏\n<b>–°—É–º–º–∞ –ø—Ä–æ–∏–≥—Ä—ã—à–∞:</b> {true_numbers(wincash)} üí∏'
    bot.send_message(loser_id, loser_msg, parse_mode='html', reply_markup=markup_reply)
    print(f'{winnner_username} –≤—ã–∏–≥—Ä–∞–ª —É {loser_username} –≤ "–ö–æ—Å—Ç–∏" (–°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞: {true_numbers(wincash)})')
    sql.execute(f"DELETE FROM rollcoop WHERE schatid = '{message.from_user.id}'")
    db.commit()




def lord_amount(message):
    adding_keyboard()
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    sql.execute(f"SELECT cash FROM players WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    try:
        amount=int(message.text)
    except:
        amount=message.text
        if amount!='–í—Å–µ üí∏':
            return
        else:
            amount=res[0]
    if res[0]>=amount and amount>=1 and res[0]>=amount*30:
        set_number=bot.send_message(message.from_user.id, "–ö–∞–∫–æ–π –Ω–æ–º–µ—Ä —è—á–µ–π–∫–∏ (–æ—Ç 1 –¥–æ 30) –≤—ã –≤—ã–±–µ—Ä–µ—Ç–µ?")
        bot.register_next_step_handler(set_number, lord_results, amount)
    elif amount<=0 and amount!=res[0]:
        bot.reply_to(message, f'‚ö†Ô∏è –ù–µ–ª—å–∑—è —Å–æ–≤–µ—Ä—à–∏—Ç—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é —Å <b>{amount}</b> üí∏', reply_markup=markup_reply)
    elif res[0]==0:
        bot.reply_to(message, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ª–∏—á–Ω—ã—Ö –¥–ª—è –∏–≥—Ä—ã', reply_markup=markup_reply)
    else:
        msg=f'–í–∞—à–∏—Ö –Ω–∞–ª–∏—á–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å—É–º–º—É <b>{true_numbers(amount)}</b> üí∏. –°–Ω–∏–º–∏—Ç–µ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ –µ—â—ë <b>{true_numbers((amount*30)-res[0])}</b> üí∏, —á—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å—Ç–∞–≤–∫—É'
        bot.reply_to(message, msg, parse_mode='html', reply_markup=markup_reply)
    


def lord_results(message, amount):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    try:
        user_number=int(message.text)
        if user_number<1 or user_number>30:
            return bot.reply_to(message, f'‚ö†Ô∏è –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —á–∏—Å–ª–æ —Ç–æ–ª—å–∫–æ –æ—Ç 1 –¥–æ 30', reply_markup=markup_reply)
    except:
        return bot.reply_to(message, f'‚ö†Ô∏è –ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 1 –¥–æ 30', reply_markup=markup_reply)
    numbers={}
    for row in range(10):
        drop_or_not=bool(random.getrandbits(1))
        if drop_or_not==True:
            number=random.randint(1,30)
            up_or_down=random.choice(["–≤–≤–µ—Ä—Ö", "–≤–Ω–∏–∑"])
            if number not in numbers:
                numbers.update({number:up_or_down})
    if user_number in numbers:
        main_amount=amount*30
        if numbers.get(user_number)=="–≤–Ω–∏–∑":
            sql.execute(f"UPDATE players SET cash = cash - {main_amount}, total = total - {main_amount} WHERE chatid = '{message.from_user.id}'")
            db.commit()
            ref_profit(message, main_amount)
            msg=f'–ö–ª–∏–Ω–æ–∫ –≤–æ–Ω–∑–∏–ª—Å—è –≤ –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –≤–∞–º–∏ –Ω–æ–º–µ—Ä–æ–º –ª–µ–∑–≤–∏–µ–º –≤–Ω–∏–∑\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ —Å—Ç–∞–≤–∫–∞ <b>{true_numbers(amount)}</b> üí∏ –Ω–∞ —á–∏—Å–ª–æ <b>{user_number}</b> –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç\n<b>–°—É–º–º–∞ –ø—Ä–æ–∏–≥—Ä—ã—à–∞:</b> {true_numbers(main_amount)} üí∏'
        else:
            sql.execute(f"UPDATE players SET cash = cash + {main_amount}, total = total + {main_amount} WHERE chatid = '{message.from_user.id}'")
            db.commit()
            msg=f'–ö–ª–∏–Ω–æ–∫ –≤–æ–Ω–∑–∏–ª—Å—è –≤ –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –≤–∞–º–∏ –Ω–æ–º–µ—Ä–æ–º –ª–µ–∑–≤–∏–µ–º –≤–≤–µ—Ä—Ö\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ <b>{true_numbers(amount)}</b> üí∏ –Ω–∞ —á–∏—Å–ª–æ <b>{user_number}</b> –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç!\n<b>–°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞:</b> {true_numbers(main_amount)} üí∏'
    else:
        msg=f'–ù–∏ –æ–¥–∏–Ω –∫–ª–∏–Ω–æ–∫ –Ω–µ –≤–æ–Ω–∑–∏–ª—Å—è –≤ –æ—Ç–≤–µ—Ä—Å—Ç–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –≤–∞–º–∏ –Ω–æ–º–µ—Ä–æ–º\n–í–∞—à–∏ <b>{true_numbers(amount)}</b> üí∏ –≤–µ—Ä–Ω—É—Ç—Å—è –∫ –≤–∞–º –Ω–∞ —Å—á—ë—Ç'   
    bot.send_message(message.from_user.id, msg, parse_mode='html', reply_markup=markup_reply)


def choosing_roll(message):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    try:
        sql.execute(f"SELECT cash FROM players WHERE chatid = '{message.from_user.id}'")
        res=sql.fetchone()
        try:
            amount=int(message.text)
        except:
            amount=message.text
            if amount!='–í—Å–µ üí∏':
                return bot.reply_to(message, f'‚ö†Ô∏è –í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏', reply_markup=markup_reply)
            else:
                amount=res[0]
        if res[0]>=amount and amount>=1:
            roll_reply=types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            roll_reply.add(types.KeyboardButton('üî¥ RED'), types.KeyboardButton('‚ö´Ô∏è BLACK'))
            roll_reply.add(types.KeyboardButton('EVEN'), types.KeyboardButton('ODD'))
            roll_reply.add(types.KeyboardButton('‚¨ÜÔ∏è 2 to 1 (–≤–µ—Ä—Ö–Ω–∏–π —Å—Ç–æ–ª–±–µ—Ü)'))
            roll_reply.add(types.KeyboardButton('2 to 1 (—Å—Ä–µ–¥–Ω–∏–π —Å—Ç–æ–ª–±–µ—Ü)'))
            roll_reply.add(types.KeyboardButton('‚¨áÔ∏è 2 to 1 (–Ω–∏–∂–Ω–∏–π —Å—Ç–æ–ª–±–µ—Ü)'))
            roll_reply.add(types.KeyboardButton('1st 12'), types.KeyboardButton('2nd 12'), types.KeyboardButton('3rd 12'))
            roll_reply.add(types.KeyboardButton('1 to 18'), types.KeyboardButton('19 to 36'))
            roll_reply.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ'))
            set_bet = bot.send_message(message.from_user.id, f"–ù–∞ —á—Ç–æ –±—É–¥–µ—Ç–µ —Å—Ç–∞–≤–∏—Ç—å? –î–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –ª–∏–±–æ —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ.\n–ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏–≥—Ä—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /rollhelp", reply_markup=roll_reply) 
            bot.register_next_step_handler(set_bet, setting_bet, amount)
        elif amount<=0 and amount!=res[0]:
            bot.reply_to(message, f'‚ö†Ô∏è –ù–µ–ª—å–∑—è —Å–æ–≤–µ—Ä—à–∏—Ç—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é —Å {amount} üí∏', reply_markup=markup_reply)
        elif res[0]==0:
            bot.reply_to(message, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ª–∏—á–Ω—ã—Ö –¥–ª—è –∏–≥—Ä—ã', reply_markup=markup_reply)
        else:
            msg=f'–í–∞—à–∏—Ö –Ω–∞–ª–∏—á–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å—É–º–º—É <b>{true_numbers(amount)}</b> üí∏. –°–Ω–∏–º–∏—Ç–µ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ –µ—â—ë <b>{true_numbers(amount-res[0])}</b> üí∏'
            bot.reply_to(message, msg, parse_mode='html', reply_markup=markup_reply)
    except:
        return


def setting_bet(message, amount):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    win_number = random.randint(0, 36)
    setting_bet=message.text
    red_list=[1,3,5,7,9,12,14,16,18,19,21,23,25,27,30,32,34,36]
    if setting_bet=='üî¥ RED':
        q=2
        amount=-amount
        for row in red_list:
            if win_number==row:
                amount=-amount
                break
    elif setting_bet=='‚ö´Ô∏è BLACK':
        q=2
        for row in red_list:
            amount=-amount
            if win_number==row:
                break
            else:
                amount=-amount
    elif setting_bet=='EVEN':
        q=2
        if win_number%2 != 0 and win_number!=0:
            amount=-amount
    elif setting_bet=='ODD':
        q=2
        if win_number%2 == 0 and win_number!=0:
            amount=-amount
    elif setting_bet=='‚¨ÜÔ∏è 2 to 1 (–≤–µ—Ä—Ö–Ω–∏–π —Å—Ç–æ–ª–±–µ—Ü)':
        q=2
        column=[]
        for i in range(3,39,3):
            column.append(i)
        amount=-amount
        for row in column:
            if win_number==row:
                amount=-amount
                break
    elif setting_bet=='2 to 1 (—Å—Ä–µ–¥–Ω–∏–π —Å—Ç–æ–ª–±–µ—Ü)':
        q=2
        column=[]
        for i in range(2,38,3):
            column.append(i)
        amount=-amount
        for row in column:
            if win_number==row:
                amount=-amount
                break
    elif setting_bet=='‚¨áÔ∏è 2 to 1 (–Ω–∏–∂–Ω–∏–π —Å—Ç–æ–ª–±–µ—Ü)':
        q=2
        column=[]
        for i in range(1,37,3):
            column.append(i)
        amount=-amount
        for row in column:
            if win_number==row:
                amount=-amount
                break
    elif setting_bet=='1st 12':
        q=3
        amount=-amount
        if win_number>=1 and win_number<=12:
            amount=-amount
    elif setting_bet=='2nd 12':
        q=3
        amount=-amount
        if win_number>=13 and win_number<=24:
            amount=-amount
    elif setting_bet=='3rd 12':
        q=3
        amount=-amount
        if win_number>=25 and win_number<=36:
            amount=-amount
    elif setting_bet=='1 to 18':
        q=2
        amount=-amount
        if win_number>=1 and win_number<=18:
            amount=-amount
    elif setting_bet=='19 to 36':
        q=2
        amount=-amount
        if win_number>=19 and win_number<=36:
            amount=-amount
    else:
        q = 35
        try:
            setting_bet=int(setting_bet)
        except:
            return bot.reply_to(message, f'‚ö†Ô∏è –í—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —É–∫–∞–∑–∞–ª–∏ —Å—Ç–∞–≤–∫—É. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –∏–ª–∏ —á–∏—Å–ª–∞–º–∏ –æ—Ç 0 –¥–æ 36', reply_markup=markup_reply)
        if setting_bet>=0 and setting_bet<=36:
            if setting_bet!=win_number:
                amount=-amount
        else:
            return bot.reply_to(message, f'‚ö†Ô∏è –í –¥–∞–Ω–Ω–æ–π –∏–≥—Ä–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –Ω–∞ —á–∏—Å–ª–∞ –æ—Ç 0 –¥–æ 36', reply_markup=markup_reply)
    if amount>0: 
        sql.execute(f"UPDATE players SET cash = cash + {amount*q}, total = total + {amount*q} WHERE chatid = '{message.from_user.id}'")
        db.commit()
        bot.send_message(message.from_user.id, f"–®–∞—Ä–∏–∫ –≤ —Ä—É–ª–µ—Ç–∫–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ –Ω–æ–º–µ—Ä–µ <b>{win_number}</b>\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–∞ <b>{setting_bet}</b> –≤—ã–∏–≥—Ä–∞–ª–∞!\n–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤—ã–∏–≥—Ä—ã—à–∞ - <b>{q}:1</b>\n<b>–°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞:</b> {true_numbers(amount*q)} üí∏", parse_mode='html', reply_markup=markup_reply)
        print(f'{message.from_user.username} –≤—ã–∏–≥—Ä–∞–ª {true_numbers(amount*q)} –≤ —Ä—É–ª–µ—Ç–∫–µ (–≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {win_number}, —Å—Ç–∞–≤–∫–∞: {true_numbers(setting_bet)}, –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤—ã–∏–≥—Ä—ã—à–∞: {q}:1)')
    else:
        amount=-amount
        sql.execute(f"UPDATE players SET cash = cash - {amount}, total = total - {amount} WHERE chatid = '{message.from_user.id}'")
        db.commit()
        bot.send_message(message.from_user.id, f"–®–∞—Ä–∏–∫ –≤ —Ä—É–ª–µ—Ç–∫–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–∞ –Ω–æ–º–µ—Ä–µ <b>{win_number}</b>\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ –Ω–∞ <b>{setting_bet}</b> –ø—Ä–æ–∏–≥—Ä–∞–ª–∞\n<b>–°—É–º–º–∞ –ø—Ä–æ–∏–≥—Ä—ã—à–∞:</b> {true_numbers(amount)} üí∏", parse_mode='html', reply_markup=markup_reply)
        ref_profit(message, amount)
        print(f'{message.from_user.username} –ø—Ä–æ–∏–≥—Ä–∞–ª {true_numbers(amount)} –≤ —Ä—É–ª–µ—Ç–∫–µ (–≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ: {win_number}, —Å—Ç–∞–≤–∫–∞: {true_numbers(setting_bet)}, –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤—ã–∏–≥—Ä—ã—à–∞: {q}:1)')
    time.sleep(0.5)


def changing_username(message):
    adding_keyboard()
    sql.execute(f"SELECT username FROM players WHERE username = '{message.text}'")
    if sql.fetchone() is None and len(message.text)>=1 and len(message.text)<=15 and message.text!='‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞':
        username=message.text
    elif message.text=='‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Å–º–µ–Ω—ã –Ω–∏–∫–Ω–µ–π–º–∞':
        bot.reply_to(message, f"–•–æ—Ä–æ—à–æ. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é üòâ", reply_markup=markup_reply)
        return
    elif len(message.text)>15:
        bot.reply_to(message, f"–í–∞—à –Ω–∏–∫–Ω–µ–π–º —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –±–æ–ª–µ–µ 15 —Å–∏–º–≤–æ–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ–Ω—é", reply_markup=markup_reply)
        return
    else:
        bot.reply_to(message, f"–í–∞—à –Ω–∏–∫–Ω–µ–π–º —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –±–æ–ª–µ–µ 15 —Å–∏–º–≤–æ–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É—è –º–µ–Ω—é", reply_markup=markup_reply)
        return
    sql.execute(f"SELECT username, cash FROM players WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    if res[1]>=change_username_price:
        sql.execute(f"UPDATE players SET cash = cash - {change_username_price}, total = total - {change_username_price}, username = '{username}' WHERE chatid = '{message.from_user.id}'")
        db.commit()
        bot.send_message(message.from_user.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í–∞—à –Ω–∏–∫–Ω–µ–π–º –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>{username}</b>', parse_mode='html',reply_markup=markup_reply)
    else:
        return bot.reply_to(message, f'–í–∞—à–∏—Ö –Ω–∞–ª–∏—á–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞', reply_markup=markup_reply)


def transfer_choosing_name(message):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    username=message.text
    sql.execute(f"SELECT inbank FROM players WHERE username = '{username}'")
    res = sql.fetchone()
    if res is None:
        return bot.send_message(message.from_user.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{username}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω", parse_mode='html', reply_markup=markup_reply)
    cancel_reply=types.ReplyKeyboardMarkup(resize_keyboard=True)
    cancel_reply.add(types.KeyboardButton('–í—Å–µ üí∏'))
    cancel_reply.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ'))
    make_caption=bot.send_message(message.from_user.id, '–ö–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏?', reply_markup=cancel_reply)
    bot.register_next_step_handler(make_caption, making_caption, username)

def making_caption(message, to_user):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    adding_nocaption()
    try:
        sending_amount=int(message.text)
        if sending_amount<1:
            return bot.reply_to(message, f'‚ö†Ô∏è –ù–µ–ª—å–∑—è —Å–æ–≤–µ—Ä—à–∏—Ç—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é —Å {amount} üí∏', reply_markup=markup_reply)
    except:
        return
    transfer=bot.send_message(message.from_user.id, '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ (–¥–æ 120 —Å–∏–º–≤–æ–ª–æ–≤)?', reply_markup=nocaption_reply)
    bot.register_next_step_handler(transfer, transfering, to_user, sending_amount)

def transfering(message, to_user, sending_amount):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    caption = message.text
    sql.execute(f"SELECT inbank, username FROM players WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    if res[0]>=sending_amount:
        sql.execute(f"UPDATE players SET inbank = inbank + {sending_amount}, total = total + {sending_amount} WHERE username = '{to_user}'")
        db.commit()
        sql.execute(f"UPDATE players SET inbank = inbank - {sending_amount}, total = total - {sending_amount} WHERE chatid = '{message.from_user.id}'")
        db.commit()
        mes_recipient= f'<b>–£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {to_user}</b>! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {res[1]} –ø–µ—Ä–µ–≤—ë–ª {sending_amount} üí∏ –≤–∞–º –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç.'
        if caption!='‚ùå –ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π' and len(caption)<=120:
            mes_recipient = f'{mes_recipient}\n<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {caption}'
        elif caption!='‚ùå –ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π' and len(caption)>120:
            bot.reply_to(message, f'‚ö†Ô∏è –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –±–æ–ª—å—à–µ 120. –£ –≤–∞—Å - <b>{len(caption)}</b>', parse_mode='html', reply_markup=markup_reply)
            return
        bot.send_message(message.from_user.id, f'–í—ã –ø–µ—Ä–µ–≤–µ–ª–∏ <b>{true_numbers(sending_amount)}</b> üí∏ —Å –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ –Ω–∞ —Å—á—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <b>{to_user}</b>!', parse_mode='html', reply_markup=markup_reply)
        sql.execute(f"SELECT chatid FROM players WHERE username = '{to_user}'")
        to_chatid = sql.fetchone()
        bot.send_message(to_chatid[0], mes_recipient, parse_mode='html', reply_markup=markup_reply)
        print(f'{message.from_user.username} –ø–µ—Ä–µ–≤—ë–ª {true_numbers(sending_amount)} —Å–æ —Å–≤–æ–µ–≥–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ –Ω–∞ —Å—á—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {to_user}')
    else:
        msg=f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ <b>{true_numbers(sending_amount)}</b> üí∏. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ —Å—á—ë—Ç –Ω–∞ <b>{true_numbers(sending_amount-res[0])}</b> üí∏ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏'
        bot.reply_to(message, msg, parse_mode='html', reply_markup=markup_reply)
    
    
#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—Ç–∞–≤–∫—É
def roll_win(message):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    try:
        sql.execute(f"SELECT cash FROM players WHERE chatid = '{message.from_user.id}'")
        res=sql.fetchone()
        try:
            amount=int(message.text)
        except:
            amount=message.text
            if amount!='–í—Å–µ üí∏':
                return
            else:
                amount=res[0]
        if res[0]>=amount and amount>=1:
            bot_dice = bot.send_dice(message.from_user.id, emoji='üé≤')
            bot.send_message(message.from_user.id, '–í–∞—à–∞ –æ—á–µ—Ä–µ–¥—å –±—Ä–æ—Å–∞—Ç—å –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å! (–û—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —ç–º–æ–¥–∑–∏ - üé≤, –ª–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–æ—Å—Ç—å –≤—ã—à–µ)')
            bot.register_next_step_handler(bot_dice, user_dice, bot_dice.dice.value, amount, message.from_user.id)
        elif amount<=0 and amount!=res[0]:
            bot.reply_to(message, f'‚ö†Ô∏è –ù–µ–ª—å–∑—è —Å–æ–≤–µ—Ä—à–∏—Ç—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é —Å <b>{amount}</b> üí∏', parse_mode='html', reply_markup=markup_reply)
        elif res[0]==0:
            bot.reply_to(message, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ª–∏—á–Ω—ã—Ö –¥–ª—è –∏–≥—Ä—ã', reply_markup=markup_reply)
        else:
            msg=f'–í–∞—à–∏—Ö –Ω–∞–ª–∏—á–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Å—Ç–∞–≤–∫–∏ –Ω–∞ —Å—É–º–º—É <b>{true_numbers(amount)}</b> üí∏. –°–Ω–∏–º–∏—Ç–µ —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞ –µ—â—ë <b>{true_numbers(amount-res[0])}</b> üí∏'
            bot.reply_to(message, msg, parse_mode='html', reply_markup=markup_reply)
    except:
        return
    time.sleep(0.5)
#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—ã–∏–≥—Ä—ã—à –≤ –∫–æ—Å—Ç–∏
def user_dice(message, bot_dice_value, amount, userid):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    try:
        if message.dice.emoji=='üé≤' and userid == message.from_user.id:
            if bot_dice_value>message.dice.value:
                bot.send_message(message.from_user.id, f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. \n<b>–°—É–º–º–∞ –ø—Ä–æ–∏–≥—Ä—ã—à–∞:</b> {true_numbers(amount)} üí∏', parse_mode='html', reply_markup=markup_reply)
                sql.execute(f"UPDATE players SET cash = cash - {amount}, total = total - {amount} WHERE chatid = '{message.from_user.id}'")
                db.commit()
                ref_profit(message, amount)
                print(f'{message.from_user.username} –ø—Ä–æ–∏–≥—Ä–∞–ª {true_numbers(amount)} –≤ –∏–≥—Ä–µ "–ö–æ—Å—Ç–∏"')
            elif bot_dice_value==message.dice.value:
                bot.send_message(message.from_user.id, f'–í —ç—Ç–æ—Ç —Ä–∞–∑ - –Ω–∏—á—å—è. –í–∞—à–∏ <b>{true_numbers(amount)}</b> üí∏ –≤–µ—Ä–Ω—É—Ç—Å—è –∫ –≤–∞–º –Ω–∞ —Å—á—ë—Ç', parse_mode='html', reply_markup=markup_reply)
            else:
                sql.execute(f"UPDATE players SET cash = cash + {amount}, total = total + {amount} WHERE chatid = '{message.from_user.id}'")
                db.commit()
                bot.send_message(message.from_user.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ <b>{true_numbers(amount)}</b> üí∏', parse_mode='html', reply_markup=markup_reply)
                print(f'{message.from_user.username} –≤—ã–∏–≥—Ä–∞–ª {true_numbers(amount)} –≤ –∏–≥—Ä–µ "–ö–æ—Å—Ç–∏"')
        time.sleep(1)
    except:
        return


#–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç
def to_bank(message):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    sql.execute(f"SELECT cash FROM players WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    try:
        amount=int(message.text)
    except:
        amount=message.text
        if amount!='–í—Å–µ üí∏':
            return
        else:
            amount=res[0]
    if res[0]>=amount and amount>=1:
        sql.execute(f"UPDATE players SET inbank = inbank + {amount}, cash = cash - {amount}, total = inbank + cash WHERE chatid = '{message.from_user.id}'")
        db.commit()
        bot.send_message(message.from_user.id, f'<b>{true_numbers(amount)}</b> üí∏ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç!', parse_mode='html', reply_markup=markup_reply)
        print(f'{message.from_user.username} –ø–æ–ª–æ–∂–∏–ª {true_numbers(amount)} –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç')
    elif amount<=0 and amount!=res[0]:
        bot.reply_to(message, f'‚ö†Ô∏è –ù–µ–ª—å–∑—è —Å–æ–≤–µ—Ä—à–∏—Ç—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é —Å <b>{amount}</b> üí∏', parse_mode='html', reply_markup=markup_reply)
    elif res[0]==0:
        bot.reply_to(message, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ª–∏—á–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞', reply_markup=markup_reply)
    else:
        msg=f'–í–∞—à–∏—Ö –Ω–∞–ª–∏—á–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞ —Å—É–º–º—É <b>{true_numbers(amount)}</b> üí∏. –£ –≤–∞—Å –Ω–∞ —Ä—É–∫–∞—Ö –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç <b>{true_numbers(amount-res[0])}</b> üí∏ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏'
        bot.reply_to(message, msg, parse_mode='html', reply_markup=markup_reply)
    time.sleep(0.5)

#–°–Ω—è—Ç–∏–µ –Ω–∞–ª–∏—á–Ω—ã—Ö
def from_bank(message):
    if message.text=='‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ':
        return bot.reply_to(message, "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ", reply_markup=markup_reply)
    adding_keyboard()
    sql.execute(f"SELECT inbank FROM players WHERE chatid = '{message.from_user.id}'")
    res=sql.fetchone()
    try:
        amount=int(message.text)
    except:
        amount=message.text
        if amount!='–í—Å–µ üí∏':
            return
        else:
            amount=res[0]
    if res[0]>=amount and amount>=1:
        sql.execute(f"UPDATE players SET cash = cash + {amount}, inbank = inbank - {amount}, total = cash + inbank WHERE chatid = '{message.from_user.id}'")
        db.commit()
        bot.send_message(message.from_user.id, f'–í—ã —Å–Ω—è–ª–∏ <b>{true_numbers(amount)}</b> üí∏ —Å –≤–∞—à–µ–≥–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞!', parse_mode='html',  reply_markup=markup_reply)
        print(f'{message.from_user.username} —Å–ø–∏—Å–∞–ª {true_numbers(amount)} —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞')
    elif amount<=0 and amount!=res[0]:
        bot.reply_to(message, f'‚ö†Ô∏è –ù–µ–ª—å–∑—è —Å–æ–≤–µ—Ä—à–∏—Ç—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é —Å <b>{amount}</b> üí∏', parse_mode='html', reply_markup=markup_reply)
    elif res[0]==0:
        bot.reply_to(message, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É –¥–ª—è —Å–Ω—è—Ç–∏—è', reply_markup=markup_reply)
    else:
        msg=f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É –¥–ª—è —Å–Ω—è—Ç–∏—è <b>{true_numbers(amount)}</b> üí∏. –ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –µ—â—ë <b>{true_numbers(amount-res[0])}</b> üí∏ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏'
        bot.reply_to(message, msg, parse_mode='html', reply_markup=markup_reply)
    time.sleep(0.5)

#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É
def checking_ref(message, username):
    adding_keyboard()
    ref_amount=0
    sql.execute(f"SELECT chatid FROM players WHERE username = '{message.text}'")
    row=sql.fetchone()
    if row is None and message.text!='‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã':
        return bot.send_message(message.from_user.id, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–∏–∫–æ–º <b>{message.text}</b> –Ω–µ –Ω–∞–π–¥–µ–Ω. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑, –∏—Å–ø–æ–ª—å–∑—É—è /start', parse_mode='html')
    elif message.text!='‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã':
        ref_amount=500
        ref_username=message.text
    start_cash=150
    start_bank=0
    mes=f'<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä–æ–≤–æ–π –º–∏—Ä, {username}!</b> –í—ã - —É—á–µ–Ω–∏–∫ —á–∞—Å—Ç–Ω–æ–π –∞–∫–∞–¥–µ–º–∏–∏ –•—è–∫–∫–∞–æ ‚Äì –º–µ—Å—Ç–∞, –≥–¥–µ —É—á–∏—Ç—Å—è —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º–∞—è —ç–ª–∏—Ç–∞. –£—Å–ø–µ—Ö–∏ –≤ —É—á–µ–±–µ, —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è‚Ä¶ –∑–¥–µ—Å—å —ç—Ç–æ –Ω–∏–∫–æ–≥–æ –Ω–µ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç. –ù–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã —Ö–æ—Ä–æ—à –≤ –∞–∑–∞—Ä—Ç–Ω—ã—Ö –∏–≥—Ä–∞—Ö ‚Äì –≤–æ—Ç –ø—Ä–∏–∑–Ω–∞–∫ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏. –í—ã–∏–≥—Ä—ã–≤–∞–π, –∏ —É—á–µ–±–∞ –ø–æ–∫–∞–∂–µ—Ç—Å—è —Ç–µ–±–µ —Ä–∞–µ–º\n\n<b>–°–µ–π—á–∞—Å —É –≤–∞—Å –Ω–∞ —Ä—É–∫–∞—Ö:</b> {start_cash} üí∏'
    if ref_amount!=0:
        start_bank=start_bank+ref_amount
        mes=f'{mes}\n<b>–ù–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É:</b> {start_bank} üí∏ (–∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ)'
        sql.execute(f"UPDATE players SET inbank = inbank + {ref_amount}, total = total + {ref_amount} WHERE username = '{ref_username}'")
        db.commit()
        try:
            bot.send_message(row[0], f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <b>{username}</b> —É–∫–∞–∑–∞–ª –≤–∞—à –Ω–∏–∫–Ω–µ–π–º –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ë–æ–Ω—É—Å –æ—Ç –∞–∫–∞–¥–µ–º–∏–∏ –≤ —Ä–∞–∑–º–µ—Ä–µ {ref_amount} üí∏ –±—ã–ª –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω –Ω–∞ –≤–∞—à –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç. –í—ã —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å {ref_percents}% —Å –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–∏–≥—Ä—ã—à–∞ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', parse_mode='html', reply_markup=markup_reply)
        except:
            pass
    total=start_cash+start_bank
    sql.execute("INSERT INTO players VALUES (%s, %s, %s, %s, %s, %s)", (message.from_user.id, username, start_cash, start_bank, total, 'unblocked'))
    db.commit()
    if row!=None:
        sql.execute("INSERT INTO referals VALUES (%s, %s, %s, %s, %s)", (message.from_user.id, username, row[0], ref_username, ref_amount))
        db.commit()
    mes=mes+'\n–í–Ω–∏–∑—É –ø–æ—è–≤–∏–ª–æ—Å—å –≤–∞—à–µ –º–µ–Ω—é –¥–ª—è –∏–≥—Ä—ã. –ò—Å–ø–æ–ª—å–∑—É—è –º–µ–Ω—é, –≤—ã –º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å, –∏–≥—Ä–∞—Ç—å, –ø—Ä–æ–≤–æ–¥–∏—Ç—å –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –Ω–µ —Ç–æ–ª—å–∫–æ.\n\n–°—Ç–∞–Ω—å—Ç–µ <u>—Å–∞–º—ã–º –±–æ–≥–∞—Ç—ã–º</u> —Å—Ä–µ–¥–∏ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤! (–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–ø–∏—Å–∫–æ–º –ª–∏–¥–µ—Ä–æ–≤)'
    bot.send_message(message.from_user.id, mes, reply_markup=markup_reply, parse_mode='html')
    bot.send_sticker(message.from_user.id, 'CAACAgIAAxkBAAEBD05gX7Z7x5kCc1iqEBF0HeFaRzXH3gACAwEAAladvQoC5dF4h-X6Tx4E')
    if row!=None:
        print(f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Casinogg Bot - {username}. –í–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {ref_username}')
    else:
        print(f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Casinogg Bot - {username}')
    

#–°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
def creating_account(message):
    sql.execute(f"SELECT username FROM players WHERE username = '{message.text}'")
    if sql.fetchone() is None and len(message.text)>=1 and len(message.text)<=15:
        username=message.text
    elif len(message.text)>15:
        bot.reply_to(message, f"‚ö†Ô∏è –í–∞—à –Ω–∏–∫–Ω–µ–π–º —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –±–æ–ª–µ–µ 15 —Å–∏–º–≤–æ–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ - /start")
        return
    elif message.text=='‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã':
        bot.reply_to(message, f"‚ö†Ô∏è –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–π –Ω–∏–∫–Ω–µ–π–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ - /start")
        return
    else:
        bot.reply_to(message, f"‚ö†Ô∏è –≠—Ç–æ—Ç –Ω–∏–∫–Ω–µ–π–º –∑–∞–Ω—è—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /start")
        return
    no_ref_reply=types.ReplyKeyboardMarkup(resize_keyboard=True)
    no_ref_reply.add(types.KeyboardButton('‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã'))
    check_ref=bot.send_message(message.from_user.id, f'–ï—Å–ª–∏ –∫—Ç–æ-—Ç–æ –∏–∑ –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∏–≥—Ä–æ–∫–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –Ω–∏–∫–Ω–µ–π–º —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∏ –í—ã, –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –Ω–∏–∫–Ω–µ–π–º –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —É–∫–∞–∂–∏—Ç–µ, –ø–æ–ª—É—á–∏—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –≤ –≤–∏–¥–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã.\n–•–æ—Ç–∏—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω–æ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é? (–ï—Å–ª–∏ –Ω–µ—Ç, –≤–æ–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –ø–æ—è–≤–∏–≤—à–∏–º—Å—è –º–µ–Ω—é)', reply_markup=no_ref_reply)
    bot.register_next_step_handler(check_ref, checking_ref, username)
#–î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
def adding_keyboard():
    global markup_reply
    global change_username_price
    global ref_percents
    change_username_price=10000
    ref_percents=5
    markup_reply=types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    markup_reply.add(types.KeyboardButton('üé≤ –ò–≥—Ä–∞—Ç—å –≤ –∫–æ—Å—Ç–∏'), types.KeyboardButton(f'üé≤ –ö–æ—Å—Ç–∏ 1 –Ω–∞ 1 (–°—Ç–∞–≤–∫–∞: {true_numbers(coop_roll_bet)} üí∏)'))
    markup_reply.add(types.KeyboardButton('üé∞ –ò–≥—Ä–∞—Ç—å –≤ —Ä—É–ª–µ—Ç–∫—É'))
    markup_reply.add(types.KeyboardButton('üó° –ñ–∏–∑–Ω—å –∏–ª–∏ —Å–º–µ—Ä—Ç—å'))
    markup_reply.add(types.KeyboardButton('üíº –†–∞–±–æ—Ç–∞—Ç—å'))
    markup_reply.add(types.KeyboardButton('üíµ –ü–æ–ª–æ–∂–∏—Ç—å –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç'), types.KeyboardButton('üè¶ –°–Ω—è—Ç—å —Å –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á—ë—Ç–∞'), types.KeyboardButton('üè¶ –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏–≥—Ä–æ–∫—É'))
    markup_reply.add(types.KeyboardButton('üí∞ –ë–∞–ª–∞–Ω—Å'))
    markup_reply.add(types.KeyboardButton('üèÜ –°–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤'))
    markup_reply.add(types.KeyboardButton('üì© –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞'))
    markup_reply.add(types.KeyboardButton(f'üë§ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º (–¶–µ–Ω–∞: {true_numbers(change_username_price)} üí∏)'))

#–î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–º–µ–Ω—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
def adding_nocaption():
    global nocaption_reply
    nocaption_reply=types.ReplyKeyboardMarkup(resize_keyboard=True)
    nocaption_reply.add(types.KeyboardButton('‚ùå –ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'))
    nocaption_reply.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ'))
    

#–î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –¥–µ–Ω–µ–≥
def adding_all():
    global all_reply
    all_reply=types.ReplyKeyboardMarkup(resize_keyboard=True)
    all_reply.add(types.KeyboardButton('–í—Å–µ üí∏'))
    all_reply.add(types.KeyboardButton('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ'))

def ref_profit(message, amount, user_id=None):
    if user_id!=None:
        sql.execute(f"SELECT * FROM referals WHERE refchatid = '{user_id}'")
    else:
        sql.execute(f"SELECT * FROM referals WHERE refchatid = '{message.from_user.id}'")
    row=sql.fetchone()
    if row!=None:
        profit = int(round((amount*ref_percents)/100))
        sql.execute(f"UPDATE referals SET reftotal = reftotal + {profit} WHERE tochatid = '{row[2]}'")
        db.commit()
        sql.execute(f"UPDATE players SET inbank = inbank + {profit}, total = total + {profit} WHERE chatid = '{row[2]}'")
        db.commit()


def true_numbers(amount):
    amount=str(amount)
    if len(amount)<=3:
        true_amount=amount
        return true_amount
    if len(amount)%3!=0:
        not_manipulated=int(len(amount)%3)
    else:
        not_manipulated=3
    true_amount=amount[:not_manipulated]
    for row in range(not_manipulated, len(amount),3):
        true_amount=true_amount+','+amount[row:row+3]
    return true_amount




bot.polling(none_stop=True)